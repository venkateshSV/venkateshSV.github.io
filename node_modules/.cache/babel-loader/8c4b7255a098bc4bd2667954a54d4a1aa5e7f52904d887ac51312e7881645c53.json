{"ast":null,"code":"var _jsxFileName = \"/Users/venky/Desktop/Samudai/Sendbird-demo/client/src/components/ListGroups.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { ThreeDots } from 'react-loader-spinner';\nimport ChatWindow from './ChatWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListGroups = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [channelList, setChannelList] = useState({\n    channels: [{\n      name: '',\n      member_count: 0,\n      channel_url: ''\n    }]\n  });\n  const [selectedGrp, setSelectedGrp] = useState({\n    name: '',\n    member_count: 0,\n    channel_url: ''\n  });\n  const userId = searchParams.get('id');\n  const url = 'https://api-0C7E1462-839A-40B0-B4AC-5AED617BC521.sendbird.com/v3/';\n  const header = {\n    'Content-Type': 'application/json; charset=utf8',\n    'Api-Token': 'ac1eb1b9b8f15e36e6181c60fadc0880bc9abeae'\n  };\n  const getChannelListByUsers = async () => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'get',\n        url: url + 'users/' + userId + '/my_group_channels',\n        headers: header,\n        params: {\n          'show_empty': true\n        }\n      });\n      channelListDetails(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const channelListDetails = newData => {\n    console.log(newData);\n    setChannelList(newData);\n  };\n  const sendGrpDetails = chDetails => {\n    setSelectedGrp(chDetails);\n  };\n  useEffect(() => {\n    getChannelListByUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: 'left',\n        paddingLeft: '10px',\n        paddingRight: '2em',\n        margin: 'auto',\n        position: 'fixed',\n        fontSize: '25px',\n        left: '0',\n        border: '1px solid black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: '4em',\n          paddingRight: '8em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !channelList ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              width: '8em'\n            },\n            children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n              height: \"100\",\n              width: \"100\",\n              radius: \"9\",\n              color: \"#008080\",\n              ariaLabel: \"three-dots-loading\",\n              wrapperStyle: {},\n              visible: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 92\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 28\n          }, this) : channelList['channels'].map(each => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      fontSize: '30px',\n                      padding: '2px',\n                      borderStyle: 'groove',\n                      margin: '10px',\n                      backgroundColor: '#E8EAF5',\n                      borderColor: '#CFD2DF',\n                      borderRadius: 8\n                    },\n                    onClick: () => sendGrpDetails(each),\n                    children: each['name']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, each['name'], false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      ...selectedGrp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ListGroups, \"nZ1TZzqR4ycqS0cQkUuB319nMoA=\", false, function () {\n  return [useSearchParams];\n});\n_c = ListGroups;\nexport default ListGroups;\nvar _c;\n$RefreshReg$(_c, \"ListGroups\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","axios","ThreeDots","ChatWindow","jsxDEV","_jsxDEV","ListGroups","_s","searchParams","channelList","setChannelList","channels","name","member_count","channel_url","selectedGrp","setSelectedGrp","userId","get","url","header","getChannelListByUsers","data","method","headers","params","channelListDetails","error","console","log","newData","sendGrpDetails","chDetails","children","style","float","paddingLeft","paddingRight","margin","position","fontSize","left","border","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","marginRight","width","height","radius","color","ariaLabel","wrapperStyle","visible","map","each","padding","borderStyle","backgroundColor","borderColor","borderRadius","onClick","_c","$RefreshReg$"],"sources":["/Users/venky/Desktop/Samudai/Sendbird-demo/client/src/components/ListGroups.tsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect} from 'react';\nimport { useSearchParams } from 'react-router-dom'\nimport axios from 'axios';\nimport {ThreeDots,Oval} from 'react-loader-spinner'\nimport ChatWindow from './ChatWindow';\n\ninterface Channel{\n  'name':string,\n  'member_count':number,\n  'channel_url':string\n}\ninterface ChannelList {\n  'channels': Channel[]\n}\nconst ListGroups: React.FC = () =>{\n  const [searchParams] = useSearchParams();\n  const [channelList,setChannelList] = useState<ChannelList>({channels:[{name:'',member_count:0,channel_url:''}]});\n  const [selectedGrp,setSelectedGrp] = useState<Channel> ({name:'',member_count:0,channel_url:''});\n  const userId = searchParams.get('id');\n  const url: string = 'https://api-0C7E1462-839A-40B0-B4AC-5AED617BC521.sendbird.com/v3/';\n  const header={\n    'Content-Type': 'application/json; charset=utf8',\n    'Api-Token': 'ac1eb1b9b8f15e36e6181c60fadc0880bc9abeae'\n  }\n  const getChannelListByUsers = async() => {\n    try {\n        const {data} = await axios({\n          method:'get',\n          url: url+'users/'+userId+'/my_group_channels',\n          headers: header,\n          params:{\n            'show_empty':true\n          }\n        })\n        channelListDetails(data);\n      } catch (error) {\n        console.log(error);\n      }\n}\nconst channelListDetails = (newData:ChannelList) => { \n  console.log(newData);\n  setChannelList(newData);\n}\nconst sendGrpDetails = (chDetails:Channel) =>{\n  setSelectedGrp(chDetails);\n}\nuseEffect(() => {\n    getChannelListByUsers();\n}, []);\n  return (\n    <div>\n    <div style={{float:'left',paddingLeft:'10px',paddingRight:'2em',margin:'auto',position:'fixed',fontSize:'25px',left:'0',border:'1px solid black'}}>\n      <div style={{paddingTop:'4em',paddingRight:'8em'}}>\n        <p>Groups</p>\n        <div>\n          {!channelList ?  <div style={{marginLeft:'auto',marginRight:'auto',width:'8em'}}><ThreeDots \n                        height=\"100\" \n                        width=\"100\" \n                        radius=\"9\"\n                        color=\"#008080\" \n                        ariaLabel=\"three-dots-loading\"\n                        wrapperStyle={{}}\n                        visible={true}\n                        /></div> : \n            channelList['channels'].map(each =>{\n              return(\n                <div key={each['name']}>\n                  <div >\n                    <span><button style={{fontSize:'30px',padding: '2px',borderStyle:'groove',margin:'10px',backgroundColor:'#E8EAF5',borderColor:'#CFD2DF',borderRadius:8}} onClick={() => sendGrpDetails(each)}>{each['name']}</button></span>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n    <ChatWindow {...selectedGrp}/>\n    </div>\n  )\n}\n\nexport default ListGroups"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAY,sBAAsB;AACnD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUtC,MAAMC,UAAoB,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAM,CAACS,WAAW,EAACC,cAAc,CAAC,GAAGZ,QAAQ,CAAc;IAACa,QAAQ,EAAC,CAAC;MAACC,IAAI,EAAC,EAAE;MAACC,YAAY,EAAC,CAAC;MAACC,WAAW,EAAC;IAAE,CAAC;EAAC,CAAC,CAAC;EAChH,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGlB,QAAQ,CAAW;IAACc,IAAI,EAAC,EAAE;IAACC,YAAY,EAAC,CAAC;IAACC,WAAW,EAAC;EAAE,CAAC,CAAC;EAChG,MAAMG,MAAM,GAAGT,YAAY,CAACU,GAAG,CAAC,IAAI,CAAC;EACrC,MAAMC,GAAW,GAAG,mEAAmE;EACvF,MAAMC,MAAM,GAAC;IACX,cAAc,EAAE,gCAAgC;IAChD,WAAW,EAAE;EACf,CAAC;EACD,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAW;IACvC,IAAI;MACA,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMrB,KAAK,CAAC;QACzBsB,MAAM,EAAC,KAAK;QACZJ,GAAG,EAAEA,GAAG,GAAC,QAAQ,GAACF,MAAM,GAAC,oBAAoB;QAC7CO,OAAO,EAAEJ,MAAM;QACfK,MAAM,EAAC;UACL,YAAY,EAAC;QACf;MACF,CAAC,CAAC;MACFC,kBAAkB,CAACJ,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACN,CAAC;EACD,MAAMD,kBAAkB,GAAII,OAAmB,IAAK;IAClDF,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;IACpBpB,cAAc,CAACoB,OAAO,CAAC;EACzB,CAAC;EACD,MAAMC,cAAc,GAAIC,SAAiB,IAAI;IAC3ChB,cAAc,CAACgB,SAAS,CAAC;EAC3B,CAAC;EACDjC,SAAS,CAAC,MAAM;IACZsB,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EACJ,oBACEhB,OAAA;IAAA4B,QAAA,gBACA5B,OAAA;MAAK6B,KAAK,EAAE;QAACC,KAAK,EAAC,MAAM;QAACC,WAAW,EAAC,MAAM;QAACC,YAAY,EAAC,KAAK;QAACC,MAAM,EAAC,MAAM;QAACC,QAAQ,EAAC,OAAO;QAACC,QAAQ,EAAC,MAAM;QAACC,IAAI,EAAC,GAAG;QAACC,MAAM,EAAC;MAAiB,CAAE;MAAAT,QAAA,eAChJ5B,OAAA;QAAK6B,KAAK,EAAE;UAACS,UAAU,EAAC,KAAK;UAACN,YAAY,EAAC;QAAK,CAAE;QAAAJ,QAAA,gBAChD5B,OAAA;UAAA4B,QAAA,EAAG;QAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACb1C,OAAA;UAAA4B,QAAA,EACG,CAACxB,WAAW,gBAAIJ,OAAA;YAAK6B,KAAK,EAAE;cAACc,UAAU,EAAC,MAAM;cAACC,WAAW,EAAC,MAAM;cAACC,KAAK,EAAC;YAAK,CAAE;YAAAjB,QAAA,eAAC5B,OAAA,CAACH,SAAS;cAC7EiD,MAAM,EAAC,KAAK;cACZD,KAAK,EAAC,KAAK;cACXE,MAAM,EAAC,GAAG;cACVC,KAAK,EAAC,SAAS;cACfC,SAAS,EAAC,oBAAoB;cAC9BC,YAAY,EAAE,CAAC,CAAE;cACjBC,OAAO,EAAE;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,GACpBtC,WAAW,CAAC,UAAU,CAAC,CAACgD,GAAG,CAACC,IAAI,IAAG;YACjC,oBACErD,OAAA;cAAA4B,QAAA,eACE5B,OAAA;gBAAA4B,QAAA,eACE5B,OAAA;kBAAA4B,QAAA,eAAM5B,OAAA;oBAAQ6B,KAAK,EAAE;sBAACM,QAAQ,EAAC,MAAM;sBAACmB,OAAO,EAAE,KAAK;sBAACC,WAAW,EAAC,QAAQ;sBAACtB,MAAM,EAAC,MAAM;sBAACuB,eAAe,EAAC,SAAS;sBAACC,WAAW,EAAC,SAAS;sBAACC,YAAY,EAAC;oBAAC,CAAE;oBAACC,OAAO,EAAEA,CAAA,KAAMjC,cAAc,CAAC2B,IAAI,CAAE;oBAAAzB,QAAA,EAAEyB,IAAI,CAAC,MAAM;kBAAC;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzN;YAAC,GAHEW,IAAI,CAAC,MAAM,CAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIjB,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1C,OAAA,CAACF,UAAU;MAAA,GAAKY;IAAW;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAAxC,EAAA,CAlEKD,UAAoB;EAAA,QACDN,eAAe;AAAA;AAAAiE,EAAA,GADlC3D,UAAoB;AAoE1B,eAAeA,UAAU;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}