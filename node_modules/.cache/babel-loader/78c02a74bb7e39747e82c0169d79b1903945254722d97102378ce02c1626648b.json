{"ast":null,"code":"var _jsxFileName = \"/Users/venky/Desktop/Samudai/Sendbird-demo/client/src/components/ListGroups.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListGroups = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [channelList, setChannelList] = useState({\n    channels: [{\n      name: '',\n      member_count: 0\n    }]\n  });\n  const userId = searchParams.get('id');\n  const url = 'https://api-0C7E1462-839A-40B0-B4AC-5AED617BC521.sendbird.com/v3/';\n  const header = {\n    'Content-Type': 'application/json; charset=utf8',\n    'Api-Token': 'ac1eb1b9b8f15e36e6181c60fadc0880bc9abeae'\n  };\n  const getChannelListByUsers = async () => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'get',\n        url: url + 'users/' + userId + '/my_group_channels',\n        headers: header,\n        params: {\n          'show_empty': true\n        }\n      });\n      channelListDetails(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const channelListDetails = newData => {\n    console.log(newData);\n    setChannelList(newData);\n  };\n  useEffect(() => {\n    getChannelListByUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      float: 'left',\n      paddingLeft: '10px',\n      paddingRight: '100px',\n      position: 'fixed',\n      fontSize: '25px',\n      left: '0',\n      border: '1px solid black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: '4em',\n        paddingRight: '8em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ListGroups, \"59uZ5ypH47C0xRfWA4hN6A9FJoU=\", false, function () {\n  return [useSearchParams];\n});\n_c = ListGroups;\nexport default ListGroups;\nvar _c;\n$RefreshReg$(_c, \"ListGroups\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","axios","jsxDEV","_jsxDEV","ListGroups","_s","searchParams","channelList","setChannelList","channels","name","member_count","userId","get","url","header","getChannelListByUsers","data","method","headers","params","channelListDetails","error","console","log","newData","style","float","paddingLeft","paddingRight","position","fontSize","left","border","children","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/venky/Desktop/Samudai/Sendbird-demo/client/src/components/ListGroups.tsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect} from 'react';\nimport { useSearchParams } from 'react-router-dom'\nimport axios from 'axios';\n\ninterface Channel{\n  'name':string,\n  'member_count':number,\n}\ninterface ChannelList {\n  'channels': Channel[]\n}\nconst ListGroups: React.FC = () =>{\n  const [searchParams] = useSearchParams();\n  const [channelList,setChannelList] = useState<ChannelList>({channels:[{name:'',member_count:0}]});\n  const userId = searchParams.get('id');\n  const url: string = 'https://api-0C7E1462-839A-40B0-B4AC-5AED617BC521.sendbird.com/v3/';\n  const header={\n    'Content-Type': 'application/json; charset=utf8',\n    'Api-Token': 'ac1eb1b9b8f15e36e6181c60fadc0880bc9abeae'\n  }\n  const getChannelListByUsers = async() => {\n    try {\n        const {data} = await axios({\n          method:'get',\n          url: url+'users/'+userId+'/my_group_channels',\n          headers: header,\n          params:{\n            'show_empty':true\n          }\n        })\n        channelListDetails(data);\n      } catch (error) {\n        console.log(error);\n      }\n}\nconst channelListDetails = (newData:ChannelList) => { \n  console.log(newData);\n  setChannelList(newData);\n}\nuseEffect(() => {\n    getChannelListByUsers();\n}, []);\n  return (\n    <div style={{float:'left',paddingLeft:'10px',paddingRight:'100px',position:'fixed',fontSize:'25px',left:'0',border:'1px solid black'}}>\n      <div style={{paddingTop:'4em',paddingRight:'8em'}}>\n        <p>Groups</p>\n\n      </div>\n    </div>\n  )\n}\n\nexport default ListGroups"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,UAAoB,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,CAAC,GAAGN,eAAe,CAAC,CAAC;EACxC,MAAM,CAACO,WAAW,EAACC,cAAc,CAAC,GAAGV,QAAQ,CAAc;IAACW,QAAQ,EAAC,CAAC;MAACC,IAAI,EAAC,EAAE;MAACC,YAAY,EAAC;IAAC,CAAC;EAAC,CAAC,CAAC;EACjG,MAAMC,MAAM,GAAGN,YAAY,CAACO,GAAG,CAAC,IAAI,CAAC;EACrC,MAAMC,GAAW,GAAG,mEAAmE;EACvF,MAAMC,MAAM,GAAC;IACX,cAAc,EAAE,gCAAgC;IAChD,WAAW,EAAE;EACf,CAAC;EACD,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAW;IACvC,IAAI;MACA,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMhB,KAAK,CAAC;QACzBiB,MAAM,EAAC,KAAK;QACZJ,GAAG,EAAEA,GAAG,GAAC,QAAQ,GAACF,MAAM,GAAC,oBAAoB;QAC7CO,OAAO,EAAEJ,MAAM;QACfK,MAAM,EAAC;UACL,YAAY,EAAC;QACf;MACF,CAAC,CAAC;MACFC,kBAAkB,CAACJ,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACN,CAAC;EACD,MAAMD,kBAAkB,GAAII,OAAmB,IAAK;IAClDF,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;IACpBjB,cAAc,CAACiB,OAAO,CAAC;EACzB,CAAC;EACD1B,SAAS,CAAC,MAAM;IACZiB,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EACJ,oBACEb,OAAA;IAAKuB,KAAK,EAAE;MAACC,KAAK,EAAC,MAAM;MAACC,WAAW,EAAC,MAAM;MAACC,YAAY,EAAC,OAAO;MAACC,QAAQ,EAAC,OAAO;MAACC,QAAQ,EAAC,MAAM;MAACC,IAAI,EAAC,GAAG;MAACC,MAAM,EAAC;IAAiB,CAAE;IAAAC,QAAA,eACpI/B,OAAA;MAAKuB,KAAK,EAAE;QAACS,UAAU,EAAC,KAAK;QAACN,YAAY,EAAC;MAAK,CAAE;MAAAK,QAAA,eAChD/B,OAAA;QAAA+B,QAAA,EAAG;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAlC,EAAA,CAvCKD,UAAoB;EAAA,QACDJ,eAAe;AAAA;AAAAwC,EAAA,GADlCpC,UAAoB;AAyC1B,eAAeA,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}